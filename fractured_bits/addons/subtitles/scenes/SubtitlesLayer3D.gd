extends CanvasLayer
class_name SubtitlesLayer3D

var position_mapping := {}

func _update_subtitles() -> void:
	pass

func add_subtitle(stream_node : AudioStreamPlayer3D, sub_data : SubtitleData, theme_override : Theme = null) -> void:
	"""
	Creates and adds a subtitle to the system
	"""
	# create the positional object
	var pos := _get_position(stream_node, sub_data)
	# create the panel object
	var panel := _create_sub(sub_data,pos)
	# add to layer
	add_child(panel, true)
	# apply theme override
	if theme_override != null:
		panel.theme = theme_override
	# register mapping
	position_mapping[panel.name] = pos
	

func _get_position(stream_node : AudioStreamPlayer3D, sub_data : SubtitleData) -> Spatial:
	if sub_data.pos_override != null and sub_data.pos_override is Spatial:
		# check that the position override is set and is a spatial node
		# since this could be any spatial node, it could even be tied to an animated element of a character, like the muzzle of a gun or the throat of a creature.
		return sub_data.pos_override as Spatial
	# revert to the actual audio stream player position, which can be set fairly easily in editor
	return stream_node as Spatial

func _create_sub(sub_data : SubtitleData, position : Spatial) -> PanelContainer:
	var panel := PanelContainer.new()
	var key := sub_data.subtitle_key
	if key.find(":") != -1:
		# treat as character dialogue, 3D positional
		var vbox := VBoxContainer.new()
		var lbl_name := Label.new()
		var lbl_text := Label.new()
		var parts := key.split(":", false, 1)
		lbl_name.text = parts[0] as String
		lbl_text.text = parts[1] as String
		vbox.add_child(lbl_name)
		vbox.add_child(lbl_text)
		panel.add_child(vbox)
	else:
		# treat as general subtitle
		var label := Label.new()
		label.text = sub_data.subtitle_key
		panel.add_child(label)
	_create_panel_name(panel, sub_data)
	return panel

var subtitle_id := 0
func _create_panel_name(panel : PanelContainer, sub_data : SubtitleData) -> void:
	# sets the subtitle's name to be something like "Sub3D_key_023"
	# the ID is not specific to any one key since there could be thousands of keys. It just heavily decreases the potential for any two suibtitles having the same name, which results in a garbage-looking name generated by Godot
	panel.name = "Sub3D_" + sub_data.subtitle_key + str(subtitle_id).pad_zeros(3)
	subtitle_id += 1
	subtitle_id %= 999
